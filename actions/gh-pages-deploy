#!/bin/bash
#
#   - name: Deploy
#     env:
#       PERSONAL_ACCESS_TOKEN: ${{ secrets.YOUR_SECRET_PAT }}   * required
#       PUBLISH_REPOSITORY: github_organization/project_name    * optional
#       PUBLISH_BRANCH: gh-pages                                * optional
#       PUBLISH_DIR: ./build                                    * optional
#     run: wget -O - https://raw.githubusercontent.com/iswai/docs-sdk/master/actions/gh-pages-deploy | bash
#
set -e

function print_error() {
    echo -e "\e[31mERROR: ${1}\e[m"
}

function print_info() {
    echo -e "\e[36mINFO: ${1}\e[m"
}

PUBLISH_REPOSITORY="${PUBLISH_REPOSITORY:-$GITHUB_REPOSITORY}"
PUBLISH_BRANCH="${PUBLISH_BRANCH:-gh-pages}"
PUBLISH_DIR="${PUBLISH_DIR:-./build}"
TOKEN="${PERSONAL_ACCESS_TOKEN:-$GITHUB_TOKEN}"

REMOTE_REPO="https://x-access-token:${TOKEN}@github.com/${PUBLISH_REPOSITORY}.git"

if [ -z "${TOKEN}" ]; then
    print_error "Missing env PERSONAL_ACCESS_TOKEN or GITHUB_TOKEN"
    exit 1
fi

if [ -z "${PUBLISH_REPOSITORY}" ]; then
    print_error "Missing env PUBLISH_REPOSITORY or GITHUB_REPOSITORY"
    exit 1
fi

print_info "Deploying ${PUBLISH_REPOSITORY} from ${PUBLISH_DIR} to ${PUBLISH_BRANCH}"

WORKING_DIR=$(pwd)
rm -rf /tmp/deploy
print_info "Checking out ${PUBLISH_BRANCH}"
git clone "${REMOTE_REPO}" /tmp/deploy
cd /tmp/deploy
git config user.name "iswai-bot"
git config user.email "57135024+iswai-bot@users.noreply.github.com"
git checkout "${PUBLISH_BRANCH}"

print_info "Removing old files"
git rm -rf .
git clean -fxd

print_info "Copying new files"
cd $WORKING_DIR
cp -r ${PUBLISH_DIR}/* /tmp/deploy
cd /tmp/deploy
git add --all

if [ -z "$(git status --porcelain)" ]; then
    print_info "No changes detected, skipping deployment"
    cd $WORKING_DIR
    exit 0
fi

print_info "Pushing changes to ${PUBLISH_BRANCH}"
git commit -m "docs: deploy from ${GITHUB_SHA}"
git push "${REMOTE_REPO}" "${PUBLISH_BRANCH}"
cd $WORKING_DIR

print_info "${GITHUB_SHA} deployed successfully"
